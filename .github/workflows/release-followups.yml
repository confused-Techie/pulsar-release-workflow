# This GitHub Action Workflow will handle **ONLY FOLLOWUP** steps to a full
# Pulsar Regular Release. This should only ever be merged **AFTER** Pulsar's
# newest version PR has been merged to `master`.
name: Followup Steps to Regular Release

on:
  workflow_dispatch:

env:
  # Variables needed
  newPulsarVersion: "null" # Set by 'findCurrentPulsarVersion' script
  GH_TOKEN: ${{ secrets.AUTH_TOKEN_GITHUB }} # Set our secret auth token for `gh` CLI to use

jobs:
  release-followups:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    #### Setup
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: latest

    - name: Checkout this Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Install this repositories dependencies
      run: npm install

    - name: Setup Git User
      run: |
        git --version
        git config --global user.name "Pulsar-Edit Bot"
        git config --global user.email "<no-reply@users-github.com>"

    #### Find current Pulsar Version
    - name: Clone the pulsar-edit/pulsar repository
      uses: actions/checkout@v4
      with:
        repository: pulsar-edit/pulsar
        path: pulsar
        token: ${{ env.GH_TOKEN }}

    - name: Find current Version
      run: |
        node ./findCurrentPulsarVersion \
          --packageLocation "pulsar/package.json" \
          --envVarOutput "newPulsarVersion"

    #### Trigger followup actions in other repositories
    - name: Trigger Pulsar Chocolatey Release
      run: |
        node ./createChocolateyReleaseViaGithubIssue \
          --version ${{ env.newPulsarVersion }} \
          --githubAuthToken ${{ env.GH_TOKEN }}

    - name: Trigger Pulsar Documentation Update
      run: |
        node ./updateDocumentationRepoViaGithubIssue \
          --version ${{ env.newPulsarVersion }} \
          --githubAuthToken ${{ env.GH_TOKEN }}

    #### Update Main Website
    ## TODO Hopefully once the site is migrated this can be done much simplier
    - name: Clone the `pulsar-edit/pulsar-edit.github.io` repository
      uses: actions/checkout@v4
      with:
        repository: pulsar-edit/pulsar-edit.github.io
        path: pulsar-web
        token: ${{ env.GH_TOKEN }}

    - name: Create new pulsar-web branch under newly released version
      run: git switch -c v${{ env.newPulsarVersion }}-update origin/main
      working-directory: pulsar-web

    - name: Update Download links
      run: |
        node ./updateDownloadLinks \
          --fileLoc "pulsar-web/docs/download.md" \
          --version ${{ env.newPulsarVersion }}

    - name: Commit changes
      run: |
        git add docs/download.md
        git commit -m "Update download links"
      working-directory: pulsar-web

    ## TODO Add the new blog post

    - name: Push Branch to remote
      run: git push -u origin v${{ env.newPulsarVersion }}-update
      working-directory: pulsar

    - name: Create GitHub Pull Request
      run: |
        gh pr create \
          --title "v${{ env.newPulsarVersion }} Updates" \
          --body "Beep. Boop. Done by a bot. Update Pulsar website after a regular release."
